services:

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Laravel backend
  laravel:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel
    restart: unless-stopped
    ports:
      - "8000:80"
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: ${POSTGRES_DB}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/var/www/html
      - ./docker/apache/000-default.conf:/etc/apache2/sites-available/000-default.conf

  # Flask microservice
  flask:
    build:
      context: ./flask-microservice
      dockerfile: Dockerfile
    container_name: flask
    restart: unless-stopped
    ports:
      - "5001:5001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./flask-microservice:/app

  # Next.js frontend
  nextjs:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nextjs
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production

  # Metabase dashboard
  mb_warehouse:
    image: metabase/metabase:latest
    container_name: mb_warehouse
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${POSTGRES_DB}
      MB_DB_PORT: 5432
      MB_DB_USER: ${POSTGRES_USER}
      MB_DB_PASS: ${POSTGRES_PASSWORD}
      MB_DB_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - mbdata:/metabase-data

# Named volumes for persistence
volumes:
  pgdata:
  mbdata:
  laravel_vendor:
  laravel_env: